@using Kendo.Mvc.UI
@{
    ViewBag.Title = "Kendo Grid";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>Kendo Grid <a href="@Url.Action("PopUpDemo","Home")">Phase 2</a></h2>
@(Html.Kendo().Grid<KendoUIApp.Models.ProductModel>()
            .Name("grid")
            .Columns(columns =>
            {                
                columns.Bound(product => product.ProductCategory.ProductCategoryId).EditorTemplateName("CategoryList").Title("Product Category").ClientTemplate("#:ProductCategory.ProductCategoryName#");
                columns.Bound(product => product.ProductName);
                columns.Bound(product => product.UnitsInStock);
                columns.Bound(product => product.UnitPrice);
            })
            .ToolBar(toolBar =>
    {      
        toolBar.Save();
    })
            .Editable(editable => editable.Mode(GridEditMode.InCell))
            .Scrollable()
            .HtmlAttributes(new { style = "height:550px;" })
            .DataSource(dataSource => dataSource
         .Ajax()
         .ServerOperation(false)
         .Batch(true)
         .Events(events => events.Error("error_handler"))
         .Model(model =>
         {
             model.Id(product => product.ProductId);
             model.Field(product => product.ProductId).Editable(false);
             model.Field(product => product.ProductCategory).DefaultValue(ViewBag.defaultCategory as KendoUIApp.Models.ProductCategoryModel);
         })
         .Read(read => read.Action("Products_Read", "Home"))
         .Update(update => update.Action("Products_Update", "Home"))
    )
)

<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
</script>

